#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

source "$(dirname "$0")/variables"

riverctl set-cursor-warp on-output-change

riverctl background-color 0x000000

# Mod+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal $mod+Shift Return spawn "$term"

# Mod+Q to close the focused view
riverctl map normal $mod Q close

# Mod+D open launcher
riverctl map normal $mod D spawn "$term --title 'app launcher' --app-id '$dropdown_class' --window-size-chars=80x30 -o environment.TERMINAL=$term -o environment.SKIP_HIST=1 -e sway-launcher-desktop"

# Fetch mail
riverctl map normal $mod+Shift M spawn ~/.local/bin/fetch-mail
riverctl map normal $mod+Control L spawn "loginctl lock-session"
riverctl map normal None XF86ScreenSaver spawn "loginctl lock-session"

# Mod+Shift+E to exit river
riverctl map normal $mod+Shift E exit

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Return zoom

# Mod+Alt+{H,J,K,L} to move views
riverctl map normal $mod+Mod1 H move left 100
riverctl map normal $mod+Mod1 J move down 100
riverctl map normal $mod+Mod1 K move up 100
riverctl map normal $mod+Mod1 L move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal $mod+Mod1+Control H snap left
#riverctl map normal $mod+Mod1+Control J snap down
#riverctl map normal $mod+Mod1+Control K snap up
#riverctl map normal $mod+Mod1+Control L snap right

# Mod+Alt+Shif+{H,J,K,L} to resize views
#riverctl map normal $mod+Mod1+Shift H resize horizontal -100
#riverctl map normal $mod+Mod1+Shift J resize vertical 100
#riverctl map normal $mod+Mod1+Shift K resize vertical -100
#riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 10)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod ${i} set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift ${i} set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control ${i} toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control ${i} toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
#   except for last one - scratchpad
all_tags=$(((1 << 31) - 1))
riverctl map normal $mod dash set-focused-tags $all_tags
riverctl map normal $mod+Shift dash set-view-tags $all_tags

# Switch between last two tag sets
riverctl map normal $mod grave focus-previous-tags
# Mod+Space to toggle float
riverctl map normal $mod Space toggle-float

# Mod+F to toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# take a screenshot
riverctl map -release normal $mod Print spawn 'grim -g "$(slurp)" - | wl-copy'
# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn "pulsemixer --change-volume +5 --unmute --get-volume | cut -d' ' -f1 > $XDG_RUNTIME_DIR/wob.sock"
    riverctl map $mode None XF86AudioLowerVolume  spawn "pulsemixer --change-volume -5 --unmute --get-volume | cut -d' ' -f1 > $XDG_RUNTIME_DIR/wob.sock"
    riverctl map $mode None XF86AudioMute         spawn 'pulsemixer --toggle-mute'

    #riverctl map $mode None XF86AudioMedia spawn 'mpc play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'mpc toggle'
    riverctl map $mode None XF86AudioPrev  spawn 'mpc prev'
    riverctl map $mode None XF86AudioNext  spawn 'mpc next'

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn "light -A 5 && light -G | cut -d'.' -f1 > $XDG_RUNTIME_DIR/wob.sock"
    riverctl map $mode None XF86MonBrightnessDown   spawn "light -U 5 && light -G | cut -d'.' -f1 > $XDG_RUNTIME_DIR/wob.sock"
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x3d435c
riverctl border-color-unfocused 0x000020

riverctl hide-cursor when-typing enabled
riverctl hide-cursor timeout 1000

# Set keyboard repeat rate
riverctl set-repeat 50 300
# does not work without correct names
riverctl input pointer-2-10-TPPS/2_IBM_TrackPoint natural-scroll enabled
riverctl input pointer-2-10-TPPS/2_IBM_TrackPoint pointer-accel 0.95

# Dropdown terminal instances
riverctl map normal $mod T spawn "$term --title SHELL --app-id '$dropdown_class' -e tmux-start-or-attach shell"
riverctl map normal None XF86Launch1 spawn "$term --title dashboard --app-id '$dropdown_class' --window-size-chars=155x45 -e tmux-start-or-attach dashboard"
riverctl map normal $mod M spawn "$term --title mail --app-id '$dropdown_class' --window-size-chars=155x45 -e aerc"
riverctl map normal $mod P spawn "$term --title music --app-id '$dropdown_class' -e $HOME/.local/bin/fzmp"
riverctl map normal $mod S spawn "$term --title gopass --app-id '$dropdown_class' -e $HOME/.local/bin/gcp"
riverctl map normal $mod O spawn "$term --title otp --app-id '$dropdown_class' -e $HOME/.local/bin/otp"

# Make certain views start floating
riverctl rule-add -app-id float float
riverctl rule-add -app-id "$dropdown_class" float
riverctl rule-add -title "* Sharing Indicator" float
riverctl rule-add -title "Password Required *" float
riverctl rule-add -app-id 'eparaksts-chrome-extension' float
riverctl rule-add -app-id 'chrome-token-signing' float
#riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
#riverctl csd-filter-add app-id "gedit"

# set GTK theme
gsettings set org.gnome.desktop.interface font-name DejaVu Sans 10
gsettings set org.gnome.desktop.interface gtk-theme Arc-Dark

# For pinentry to work
dbus-update-activation-environment WAYLAND_DISPLAY

### Auto started daemons
systemctl --user import-environment
systemctl --user restart wayland-session.target

riverctl map normal None Super_L spawn 'pkill -SIGUSR1 yambar'
riverctl map -release normal Super Super_L spawn 'pkill -SIGUSR2 yambar'

# River will send the process group of the init executable SIGTERM on exit.
riverctl spawn yambar
riverctl default-layout kile
# default fibionacci-split layout
exec kile
