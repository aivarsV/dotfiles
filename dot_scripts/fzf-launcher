#!/bin/bash
# Program launcher for sway
# intended to run in terminal


TMUX_SESSION_SOURCE="$HOME/.config/tmux-sessions/"
list_tmux_sessions() {
  if [[ -d "$TMUX_SESSION_SOURCE" ]]
  then
    find -L "$TMUX_SESSION_SOURCE" -maxdepth 1 -mindepth 1 -type f -printf "tmux-session %f\n"
  fi
  tmux ls -F 'tmux-session #S' 2>>/dev/null
}
list_options() {
  # open windows
  swaymsg -t get_tree | jq 'def get_win($ws): 
            recurse(.nodes[]?) | 
              select(.type? == "con" and ( .app_id? != null or .window_properties? != null )) | 
              "ws "+ $ws + ": " + (if .app_id? != null then .app_id else .window_properties.instance end) + " " + .name + " id=" + (.id | tostring); 
          recurse(.nodes[]?) | select(.type? == "workspace") | get_win(.name)'
  # executables, available from PATH
  echo -n "$PATH" | xargs -d : -I{} -r -- find -L {} -maxdepth 1 -mindepth 1 -type f -executable -printf "%f\n" | sort -u  
  # tmux sessions
  list_tmux_sessions | sort -u
}

prompt_user() {
  list_options | fzf --reverse --border --tiebreak=index -e --print-query --expect=ctrl-space --cycle --bind=tab:down,btab:up --expect=alt-enter
}


################################
#   Main starts here
################################

#declare $(parse_input) >> /dev/null # reduce output in case of cancelled input
INPUT_ARGS=(QUERY LAUNCH_TYPE MATCH)

i=0
while read line
do
  eval "${INPUT_ARGS[i++]}='$line'"
done <<< $(prompt_user)

# check if should focus another window
win_id=`echo $MATCH | sed -n 's/^"ws \w\+: [^ ]\+ .* id=\([0-9]\+\)"$/\1/p'`

if [[ ! -z "$win_id" ]]
then
  swaymsg "[con_id = $win_id] focus"
  exit
fi

if [[ -z "$MATCH" ]]
then # user cancelled, or custom command 
  if [[ -z "$QUERY" ]]
  then
    exit # user cancelled
  fi

  MATCH="$QUERY"
fi

if [ "$LAUNCH_TYPE" == "alt-enter" ]
then
  # alt+enter to launch in new terminal
  COMMAND=`echo $MATCH | awk '{print $1;}'`
  if which $COMMAND >> /dev/null 2>&1
  then
    MATCH=`echo exec $MATCH`
  fi

  tmp_script=`mktemp --tmpdir 'XXXXXXXXXXXXX'`
  chmod u+x $tmp_script

  cat >> $tmp_script << EOL
#!$SHELL
    rm $tmp_script
    sleep 0.5
    $MATCH
EOL
  swaymsg "exec \$term --option window.class.general=$COMMAND -e $tmp_script"
else
  # graphical wayland app or xwayland app
  swaymsg "exec $(if [[ -z "$LAUNCH_TYPE" ]]; then echo \$launch-native; fi) $MATCH"
fi
