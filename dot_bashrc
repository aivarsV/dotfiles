#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return


GPG_TTY=`tty` gpg-connect-agent updatestartuptty /bye >> /dev/null

# history config
HISTSIZE=5000
HISTFILE=~/.cache/bash_history
~/.local/bin/cleanup-history $HISTFILE
# reload history
builtin history -c
builtin history -r
# fzf history searching
source /usr/share/fzf/key-bindings.bash

# some useful aliases
alias ls='ls --color=auto -1'
alias gcp='gopass show -c $(gopass list -f | fzf)'
alias sway='QT_QPA_PLATFORM=wayland-egl \
  QT_QPA_PLATFORMTHEME=qt5ct \
  CLUTTER_BACKEND=wayland \
  SDL_VIDEODRIVER=wayland \
  GDK_BACKEND=wayland \
  WALLPAPER_FILE=~/Attēli/wallpaper.png \
  BROWSER=firefox \
  exec sway'
alias river='QT_QPA_PLATFORM=wayland-egl \
  QT_QPA_PLATFORMTHEME=qt5ct \
  CLUTTER_BACKEND=wayland \
  SDL_VIDEODRIVER=wayland \
  GDK_BACKEND=wayland \
  WALLPAPER_FILE=~/Attēli/wallpaper.png \
  BROWSER=firefox \
  XKB_DEFAULT_LAYOUT="lv-custom" \
  XKB_DEFAULT_OPTIONS="caps:escape" \
  exec river'



PROMPT_COMMAND=__prompt_command

__prompt_command() {
  local _cmdResult="$?"

  local oldstty=$(stty -g)
  local Ps=${1:-11}

  stty raw -echo min 0 time 0
  printf "\033]$Ps;?\033\\"
  # xterm needs the sleep (or "time 1", but that is 1/10th second).
  sleep 0.025
  read -r answer
  result=${answer#*;}
  stty $oldstty
  # Remove escape at the end.
  if [[ -z "$(echo $result | sed 's/[^rgb:0-9a-f/]\+$//')" ]]
  then
    local _colReset='\[\e[0m\]'
    local _colPwd='\[\e[97;44m\]'
    local _colDelim='\[\e[0m\e[34m\]'
    local _colFailure='\[\e[31m\]'
    local _colCmd='\[\e[0m\e[94m\]'

  else
    local _colReset='\[\e[0m\]'
    local _colPwd='\[\e[48;2;69;75;104m\e[38;2;198;200;209m\]'
    local _colDelim='\[\e[0m\e[38;2;69;75;104m\]'
    local _colFailure='\[\e[38;2;226;120;120m\]'
    local _colCmd='\[\e[0m\e[94m\]'

  fi

  # Shortened version of $PWD
  PS1="$_colPwd \$(pwd | sed -r -e 's@'\"$HOME\"'@~@; s@([^/]{3})[^/]+/@\1/@g') ${_colDelim}$_colReset"
  # change prompt color depending on previous command exit state
  if [ "$_cmdResult" != 0 ]; then
    PS1+="$_colFailure"
  fi
  PS1+=" \\$ $_colCmd"

  # reset color after user entry
  PS0="$_colReset"
}


trap "~/.local/bin/cleanup-history ~/.bash_history" EXIT
